# name: Initialize Tracking Plans

# on:
#   release:
#     types: [published]

# jobs:
#   initialize-tracking-plans:
#     if: contains(github.event.release.name, 'initialize') # Explicit condition
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         tracking_plan: ${{ fromJson(vars.TRACKING_PLANS) }} # Load from config JSON

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 1

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '16'

#       - name: Install dependencies
#         run: npm install

#       - name: Load Tracking Plans Configuration
#         run: echo "TRACKING_PLANS=$(cat config/tracking-plans-config.json)" >> $GITHUB_ENV

#       # **Step 1: GET Tracking Plans for DEV & Save JSON**
#       - name: Fetch DEV Tracking Plan
#         env:
#           SEGMENT_API_KEY: ${{ secrets.SEGMENT_PUBLIC_API_TOKEN }}
#           SEGMENT_TRACKING_PLAN_ID: ${{ secrets[matrix.tracking_plan.dev_secret] }}
#           PLAN_DIR: plans/dev/${{ matrix.tracking_plan.path }}
#         run: |
#           echo "Fetching DEV tracking plan for ${{ matrix.tracking_plan.name }}"
#           node scripts/get-tracking-plan.js

#       # **Step 2: GET Tracking Plans for PROD & Save JSON**
#       - name: Fetch PROD Tracking Plan
#         env:
#           SEGMENT_API_KEY: ${{ secrets.SEGMENT_PUBLIC_API_TOKEN }}
#           SEGMENT_TRACKING_PLAN_ID: ${{ secrets[matrix.tracking_plan.prod_secret] }}
#           PLAN_DIR: plans/prod/${{ matrix.tracking_plan.path }}
#         run: |
#           echo "Fetching PROD tracking plan for ${{ matrix.tracking_plan.name }}"
#           node scripts/get-tracking-plan.js

#       # **Step 3: Generate YAML for PROD**
#       - name: Generate YAML from PROD JSON
#         run: |
#           echo "Generating YAML for ${{ matrix.tracking_plan.name }}"
#           node scripts/generate-yaml-rules.js "plans/prod/${{ matrix.tracking_plan.path }}" "tracking-rules/${{ matrix.tracking_plan.path }}"

#       # **Step 4: Generate Markdown for PROD**
#       - name: Generate Markdown from YAML
#         run: |
#           echo "Generating markdown for ${{ matrix.tracking_plan.name }}"
#           node scripts/render-tp.js "${{ matrix.tracking_plan.name }} Tracking Plan" "plans/prod/${{ matrix.tracking_plan.path }}/current-rules.json" "docs/${{ matrix.tracking_plan.path }}_tracking_plan.md"

#       # **Step 5: Commit and Push Changes**
#       - name: Commit and Push Updates
#         run: |
#           git config --global user.name "github-actions[bot]"
#           git config --global user.email "github-actions[bot]@users.noreply.github.com"
#           git add plans/dev/${{ matrix.tracking_plan.path }}/current-rules.json \
#                   plans/prod/${{ matrix.tracking_plan.path }}/current-rules.json \
#                   tracking-rules/${{ matrix.tracking_plan.path }}/*.yml \
#                   docs/${{ matrix.tracking_plan.path }}_tracking_plan.md
#           git commit -m "Initialized tracking plans for ${{ matrix.tracking_plan.name }} [skip ci]" || echo "No changes to commit"
          
#           # Fetch latest changes & merge automatically
#           git pull --rebase origin main || git pull --autostash origin main
          
#           # Push changes
#           git push origin main
# name: Initialize Tracking Plans

# on:
#   release:
#     types: [published]

# jobs:
#   prepare-matrix:
#     runs-on: ubuntu-latest
#     outputs:
#       matrix: ${{ steps.set-matrix.outputs.matrix }}
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Load Tracking Plans Configuration
#         id: set-matrix
#         run: echo "matrix=$(jq -c .plans config/tracking-plans-config.json)" >> $GITHUB_OUTPUT

#   initialize-tracking-plans:
#     needs: prepare-matrix  # Wait for matrix to be prepared
#     if: contains(github.event.release.name, 'initialize') # Ensure it runs on "initialize" release
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         tracking_plan: ${{ fromJson(needs.prepare-matrix.outputs.matrix) }} # Load matrix from previous job

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 1

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '16'

#       - name: Install dependencies
#         run: npm install

#       # **Step 1: GET Tracking Plans for DEV & Save JSON**
#       - name: Fetch DEV Tracking Plan
#         env:
#           SEGMENT_API_KEY: ${{ secrets.SEGMENT_PUBLIC_API_TOKEN }}
#           SEGMENT_TRACKING_PLAN_ID: ${{ secrets[matrix.tracking_plan.dev_secret] }}
#           PLAN_DIR: plans/dev/${{ matrix.tracking_plan.path }}
#         run: |
#           echo "Fetching DEV tracking plan for ${{ matrix.tracking_plan.name }}"
#           node scripts/save-tracking-plan.js

#       # **Step 2: GET Tracking Plans for PROD & Save JSON**
#       - name: Fetch PROD Tracking Plan
#         env:
#           SEGMENT_API_KEY: ${{ secrets.SEGMENT_PUBLIC_API_TOKEN }}
#           SEGMENT_TRACKING_PLAN_ID: ${{ secrets[matrix.tracking_plan.prod_secret] }}
#           PLAN_DIR: plans/prod/${{ matrix.tracking_plan.path }}
#         run: |
#           echo "Fetching PROD tracking plan for ${{ matrix.tracking_plan.name }}"
#           node scripts/save-tracking-plan.js

#       # **Step 3: Generate YAML for PROD**
#       - name: Generate YAML from PROD JSON
#         run: |
#           echo "Generating YAML for ${{ matrix.tracking_plan.name }}"
#           node scripts/generate-yaml-rules.js "plans/prod/${{ matrix.tracking_plan.path }}" "tracking-rules/${{ matrix.tracking_plan.path }}"

#       # **Step 4: Generate Markdown for PROD**
#       - name: Generate Markdown from YAML
#         run: |
#           echo "Generating markdown for ${{ matrix.tracking_plan.name }}"
#           node scripts/render-tp.js "${{ matrix.tracking_plan.name }} Tracking Plan" "plans/prod/${{ matrix.tracking_plan.path }}/current-rules.json" "docs/${{ matrix.tracking_plan.path }}_tracking_plan.md"

#         # **Step 5: Commit and Push Changes**
#       - name: Commit and Push Updates
#         run: |
#           git config --global user.name "github-actions[bot]"
#           git config --global user.email "github-actions[bot]@users.noreply.github.com"

#           # Ensure we're on main branch
#           git fetch origin main
#           git checkout main
          
#           git add plans/dev/${{ matrix.tracking_plan.path }}/current-rules.json \
#                   plans/prod/${{ matrix.tracking_plan.path }}/current-rules.json \
#                   tracking-rules/${{ matrix.tracking_plan.path }}/*.yml \
#                   docs/${{ matrix.tracking_plan.path }}_tracking_plan.md
          
#           git commit -m "Initialized tracking plans for ${{ matrix.tracking_plan.name }} [skip ci]" || echo "No changes to commit"
          
#           # Fetch latest changes & merge automatically
#           git pull --rebase origin main || git pull --autostash origin main
          
#           # Push changes
#           git push origin main
  
name: Initialize Tracking Plans

on:
  release:
    types: [published]

jobs:
  initialize-tracking-plans:
    if: contains(github.event.release.name, 'initialize')
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.parse_json.outputs.matrix }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      # Load tracking plans from JSON file
      - name: Load Tracking Plans Configuration
        id: parse_json
        run: |
          MATRIX=$(jq -c .plans config/tracking-plans-config.json)
          echo "::set-output name=matrix::$MATRIX"

  matrix-job:
    needs: initialize-tracking-plans
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tracking_plan: ${{ fromJson(needs.initialize-tracking-plans.outputs.matrix) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      # **Step 1: Fetch DEV Tracking Plan**
      - name: Fetch DEV Tracking Plan
        env:
          SEGMENT_API_KEY: ${{ secrets.SEGMENT_PUBLIC_API_TOKEN }}
          SEGMENT_TRACKING_PLAN_ID: ${{ secrets[matrix.tracking_plan.dev_secret] }}
          PLAN_DIR: plans/dev/${{ matrix.tracking_plan.path }}
        run: |
          echo "Fetching DEV tracking plan for ${{ matrix.tracking_plan.name }}"
          node scripts/save-tracking-plan.js

      # **Step 2: Fetch PROD Tracking Plan**
      - name: Fetch PROD Tracking Plan
        env:
          SEGMENT_API_KEY: ${{ secrets.SEGMENT_PUBLIC_API_TOKEN }}
          SEGMENT_TRACKING_PLAN_ID: ${{ secrets[matrix.tracking_plan.prod_secret] }}
          PLAN_DIR: plans/prod/${{ matrix.tracking_plan.path }}
        run: |
          echo "Fetching PROD tracking plan for ${{ matrix.tracking_plan.name }}"
          node scripts/save-tracking-plan.js

      # **Step 3: Generate YAML from PROD JSON**
      - name: Generate YAML from PROD JSON
        run: |
          echo "Generating YAML for ${{ matrix.tracking_plan.name }}"
          node scripts/generate-yaml-rules.js "plans/prod/${{ matrix.tracking_plan.path }}" "tracking-rules/${{ matrix.tracking_plan.path }}"

      # **Step 4: Generate Markdown for PROD**
      - name: Generate Markdown from YAML
        run: |
          echo "Generating markdown for ${{ matrix.tracking_plan.name }}"
          node scripts/render-tp.js "${{ matrix.tracking_plan.name }} Tracking Plan" "plans/prod/${{ matrix.tracking_plan.path }}/current-rules.json" "docs/${{ matrix.tracking_plan.path }}_tracking_plan.md"

      # **Step 5: Commit and Push Changes**
      - name: Commit and Push Updates
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Ensure we're on main branch
          git fetch origin main
          git checkout main

          git add plans/dev/${{ matrix.tracking_plan.path }}/current-rules.json \
                  plans/prod/${{ matrix.tracking_plan.path }}/current-rules.json \
                  tracking-rules/${{ matrix.tracking_plan.path }}/*.yml \
                  docs/${{ matrix.tracking_plan.path }}_tracking_plan.md
          
          git commit -m "Initialized tracking plans for ${{ matrix.tracking_plan.name }} [skip ci]" || echo "No changes to commit"

          # Fetch latest changes & merge automatically
          git pull --rebase origin main || git pull --autostash origin main

          # Push changes
          git push origin main

